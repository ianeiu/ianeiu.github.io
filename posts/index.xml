<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on IanEiU</title>
    <link>https://ianeiu.github.io/posts/</link>
    <description>Recent content in Posts on IanEiU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>WuWeiMian</copyright>
    <lastBuildDate>Tue, 04 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ianeiu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[置顶]js、jq——DEMO集</title>
      <link>https://ianeiu.github.io/2018/12/04/%E7%BD%AE%E9%A1%B6jsjqdemo%E9%9B%86/</link>
      <pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/12/04/%E7%BD%AE%E9%A1%B6jsjqdemo%E9%9B%86/</guid>
      <description>操作元素的样式 $(&amp;quot;#msg&amp;quot;).css(&amp;quot;background&amp;quot;); //返回元素的背景颜色 $(&amp;quot;#msg&amp;quot;).css(&amp;quot;background&amp;quot;,&amp;quot;#ccc&amp;quot;) //设定元素背景为灰色 $(&amp;quot;#msg&amp;quot;).height(300); $(&amp;quot;#msg&amp;quot;).width(&amp;quot;200&amp;quot;); //设定宽高 $(&amp;quot;#msg&amp;quot;).css({ color: &amp;quot;red&amp;quot;, background: &amp;quot;blue&amp;quot; });//以名值对的形式设定样式 $(&amp;quot;p&amp;quot;).attr(&amp;quot;class&amp;quot;, &amp;quot;ddiiyy&amp;quot;); //设置p元素的</description>
    </item>
    
    <item>
      <title>[置顶]Good knowledge</title>
      <link>https://ianeiu.github.io/2018/09/11/%E7%BD%AE%E9%A1%B6good-knowledge/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/09/11/%E7%BD%AE%E9%A1%B6good-knowledge/</guid>
      <description>HTTP超文本协议 HTTP超文本协议 来源：微信公众号 java思维导图 mybatis Spring-Mybatis &amp;mdash; 配置SqlSessionFactoryBean，整合Spring-</description>
    </item>
    
    <item>
      <title>[置顶]Good Web</title>
      <link>https://ianeiu.github.io/2018/09/29/%E7%BD%AE%E9%A1%B6good-web/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/09/29/%E7%BD%AE%E9%A1%B6good-web/</guid>
      <description>tool md5解密加密 JSON校验、 JSON着色工具 编码转换 IP查询 IDEA注册码 Maven仓库 Tomcat下载 艺术字（框框）、 艺术字（色层） MD</description>
    </item>
    
    <item>
      <title>Java笔记——web</title>
      <link>https://ianeiu.github.io/2018/12/16/java%E7%AC%94%E8%AE%B0web/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/12/16/java%E7%AC%94%E8%AE%B0web/</guid>
      <description>JavaWeb笔记整理 XML XML(EXtensible Markup Language):可扩展标记型语言，主要是为了存储数据（程序配置文件）、数据交换 格式：&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; XM</description>
    </item>
    
    <item>
      <title>Java笔记——基础</title>
      <link>https://ianeiu.github.io/2018/12/02/java%E7%AC%94%E8%AE%B0%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/12/02/java%E7%AC%94%E8%AE%B0%E5%9F%BA%E7%A1%80/</guid>
      <description>Java基础笔记整理 关键字 用于定义数据类型 class interface 【引用数据类型：类、接口、数组】 boolean(1) char(2) byte(1) short(2) int(4) long(8) float(4) double(8) 【8个内置数据类型】 类型转换： byte→sho</description>
    </item>
    
    <item>
      <title>DB——SQL集锦</title>
      <link>https://ianeiu.github.io/2018/11/30/dbsql%E9%9B%86%E9%94%A6/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/11/30/dbsql%E9%9B%86%E9%94%A6/</guid>
      <description>数据定义语言（DDL） 清空表数据 TRUNCATE TABLE TABLENAME; 修改字段类型或长度 标准SQL修改字段类型和长度语句：ALTER TABLE tableName modify column columnName 类型 例如Mysql的修改字段类</description>
    </item>
    
    <item>
      <title>IDEA——快捷键</title>
      <link>https://ianeiu.github.io/2018/11/30/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/11/30/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>快捷键设置 默认情况下，我们输入代码时IDEA会自动弹出代码提示框，这时候是不用按快捷键的，直接使用方向键选择我们需要的条目就可以了。 如果我们</description>
    </item>
    
    <item>
      <title>Java基础题（Integer、String、内部类与final）</title>
      <link>https://ianeiu.github.io/2018/11/18/java%E5%9F%BA%E7%A1%80%E9%A2%98integerstring%E5%86%85%E9%83%A8%E7%B1%BB%E4%B8%8Efinal/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/11/18/java%E5%9F%BA%E7%A1%80%E9%A2%98integerstring%E5%86%85%E9%83%A8%E7%B1%BB%E4%B8%8Efinal/</guid>
      <description>翻了翻之前收藏的文章，找到几道有意思的题，这里整理汇总一下。 Integer Integer a = 1000,b=1000; Integer c = 100,d=100; @Test public void testIntegerDD(){ System.out.println(a==b);//false System.out.println(c==d);//true } 运行代码，我们会得到 false true。这道题笔试用经常</description>
    </item>
    
    <item>
      <title>SpringBoot——整合</title>
      <link>https://ianeiu.github.io/2018/11/01/springboot%E6%95%B4%E5%90%88/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/11/01/springboot%E6%95%B4%E5%90%88/</guid>
      <description>如非说明，皆是使用1.5 本文只进行简单的代码提示，具体内容可自行百度 CXF @Bean public ServletRegistrationBean CXFServlet() { ServletRegistrationBean cxfBean = new ServletRegistrationBean(new CXFServlet(), &amp;quot;/webservice/*&amp;quot;); cxfBean.setName(&amp;quot;CXFServlet&amp;quot;); cxfBean.setLoadOnStartup(1); return cxfBean; } @Configuration public class CXFConfig { @Autowired private Bus bus; @Autowired private SSOService sSOService; @Bean public Endpoint endpointSSO() {</description>
    </item>
    
    <item>
      <title>SpringBoot——使用springboot所见问题简单记录</title>
      <link>https://ianeiu.github.io/2018/10/30/springboot%E4%BD%BF%E7%94%A8springboot%E6%89%80%E8%A7%81%E9%97%AE%E9%A2%98%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/10/30/springboot%E4%BD%BF%E7%94%A8springboot%E6%89%80%E8%A7%81%E9%97%AE%E9%A2%98%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/</guid>
      <description>如非说明，皆是使用1.5 现象1：引入layer.js出现undefinedcss目录 原因：layer.js与layui.js冲突 解决：将la</description>
    </item>
    
    <item>
      <title>Spring——拦截器</title>
      <link>https://ianeiu.github.io/2018/10/30/spring%E6%8B%A6%E6%88%AA%E5%99%A8/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/10/30/spring%E6%8B%A6%E6%88%AA%E5%99%A8/</guid>
      <description>前言 接到一个需求，将已开发完成的系统接入权限系统。其中需要在多处请求返回的ModelAndView中添加权限代码集合，方便显示层做菜单按钮的</description>
    </item>
    
    <item>
      <title>JVM类加载机制</title>
      <link>https://ianeiu.github.io/2018/10/19/jvm%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/10/19/jvm%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</guid>
      <description>虚拟机类加载机制 虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换（准备）、解析和初始化，最终形成可以被Java虚拟机直</description>
    </item>
    
    <item>
      <title>DB——SQL小技巧</title>
      <link>https://ianeiu.github.io/2018/10/11/dbsql%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/10/11/dbsql%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>start with connect by prior 递归查询用法 [Oracle] 初始化表及数据 create table MAS_BAKDEAL_TEMPLATE ( SEQID NUMBER(10) not null, TAB_ID NUMBER default 0, DEALNAME VARCHAR2(100) not null, PARENTID NUMBER not null, ISAUTO CHAR(1), STATUS CHAR(1) ) -- Add comments to the table comment on table MAS_BAKDEAL_TEMPLATE is &#39;后续处理&#39;; -- Add comments to the columns comment on</description>
    </item>
    
    <item>
      <title>DB——面试题</title>
      <link>https://ianeiu.github.io/2018/10/11/db%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/10/11/db%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>原文地址 click 触发器的作用 触发器是一中特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库</description>
    </item>
    
    <item>
      <title>Java笔记——回收机制、内存泄漏及OOM</title>
      <link>https://ianeiu.github.io/2018/10/10/java%E7%AC%94%E8%AE%B0%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%8F%8Aoom/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ianeiu.github.io/2018/10/10/java%E7%AC%94%E8%AE%B0%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%8F%8Aoom/</guid>
      <description>Java内存回收机制 不论哪种语言的内存分配方式，都需要返回所分配内存的真实地址，也就是返回一个指针到内存块的首地址。 Java中对象是采用ne</description>
    </item>
    
  </channel>
</rss>